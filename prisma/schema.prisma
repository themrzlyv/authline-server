generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  city      String
  number    String
  birthday  String
  photo     String
  posts     Post[]
  role      Role     @default(User)
  createdAt DateTime @default(now())
}

model CarBrand {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  brandName String     @unique
  image     String
  models    CarModel[]
  posts     Post[]
}

model CarModel {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  modelName  String   @unique
  post       Post[]
  brand      CarBrand @relation(fields: [carBrandId], references: [id], onDelete: Cascade)
  carBrandId String   @db.ObjectId
}

model BanTypes {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  banName String @unique
  posts   Post[]
}

model GearBoxTypes {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  gearBoxName String @unique
  posts       Post[]
}

model Post {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  content        String
  images         String[]
  author         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  carBrand       CarBrand     @relation(fields: [carBrandId], references: [id], onDelete: Cascade)
  carModel       CarModel     @relation(fields: [carModelId], references: [id], onDelete: Cascade)
  gearBox        GearBoxTypes @relation(fields: [gearBoxTypesId], references: [id], onDelete: Cascade)
  ban            BanTypes     @relation(fields: [banTypesId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())
  userId         String       @db.ObjectId
  carBrandId     String       @db.ObjectId
  carModelId     String       @db.ObjectId
  gearBoxTypesId String       @db.ObjectId
  banTypesId     String       @db.ObjectId
}

enum Role {
  User
  Admin
}
